using System;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Diagnostics.Contracts;
using System.Formats.Asn1;
using System.Globalization;
using System.IO.Compression;
using System.Runtime.CompilerServices;
using System.Text;
using System.Text.Json;
using System.Timers;
using Microsoft.VisualBasic.FileIO;

/*public class Example
{
    public static void Main ()
    {*/
//Ejercicio 3 
/*
    char TipoDeVacaciones;
    short DuracionDeDias;
    int CosteVacaciones;

Console.WriteLine("introduce TipoDeVacaciones A|B");
TipoDeVacaciones= Char.Parse(Console.ReadLine());
TipoDeVacaciones= Char.ToUpper(TipoDeVacaciones);

Console.WriteLine("introduce duración de días");
DuracionDeDias= short.Parse(Console.WriteLine());

string texto;
if (TipoDeVacaciones == 'A')
{
   CosteVacaciones = DuracionDeDias*250;
    texto= $"El coste de las vacaciones tipo A es de {CosteVacaciones + 50} euros";
}
else if (TipoDeVacaciones == 'B')
{
    CosteVacaciones = DuracionDeDias*150;
    texto= $"El coste de las vacaciones tipo B es de {CosteVacaciones +50} euros";
} 
else texto= "Opción no válida de vacaciones";


Console.WriteLine (texto);
*/

//EJERCICIO 4

/*short numero1,numero2,numero3,numero4;

Console.WriteLine("Introduce el primer número");
numero1 = short.Parse(Console.ReadLine() ?? "0");
Console.WriteLine("Introduce el segundo número");
numero2 = short.Parse(Console.ReadLine() ?? "0");
Console.WriteLine("Introduce el tercer número");
numero3= short.Parse(Console.ReadLine() ?? "0");
Console.WriteLine("Introduce el cuarto número");
numero4 = short.Parse(Console.ReadLine() ?? "0");

    string texto;
    if( numero1 ==numero2 && numero2 == numero3 && numero3==numero4 )
{
    texto= $"todos los números son iguales";
}
    else if (numero1>numero2 && numero1>numero3 && numero1>numero4)
    texto= $"el número mayor es {numero1}";
    else if (numero1<numero2 && numero2>numero3 && numero2>numero4)
    texto= $"el número mayor es {numero2}";
    else if (numero1<numero3 && numero2<numero3 && numero3>numero4)
    texto= $"el número mayor es {numero3}";
    else if (numero1<numero4 && numero2<numero4 && numero3<numero4)
    texto= $"el número mayor es {numero4}";
Console.WriteLine(texto);
} 
*/

//Ejercicio 1
/*
int numero1, numero2, resultado;
string textoOperacion

    Console.Write("Escribe un número");
    numero 1= int.Parse(Console.Readline());
    Console.Write("Escribe un número");
    numero 2= int.Parse(Console.Readline());

    if(numero1>numero2)
    {
        texto.Operacion= "suma"
        resultado = numero1 + numero 2
    }
    elseif(numero 1<mumero 2);
    {
         texto.Operacion= "resta"
         resultado = numero1 - numero2
    }
    Console.WriteLine("El resultado de la" textoOperacion "es" + resultado)
    */
//ejercicio 7
/*uint noches;
Console.WriteLine("Introduce el número de noches");
noches = uint.Parse(Console.ReadLine() ?? "0");
char tipo;
Console.WriteLine("Introduce el tipo de habitación");
tipo = char.Parse(Console.ReadLine() ?? "I");

string texto;
switch (tipo)
{
    case 'I' when noches >= '2':
        texto = $"El precio es de {27*noches} €";
        break;
    case 'D' when noches >= '2':
        texto = $"El precio es de {44*noches} €";
        break;
    case 'I' when noches < '2':
        texto = $"El precio es de {25*noches} €";
        break;
    case 'D' when noches < '2':
        texto =$"El precio es de{44*noches} €";
        break;

 Console.WriteLine(texto);  
}*/

// EJERCICIO 8
/*Una compañía de videojuegos te ha contratado para escribir el programa de un videojuego
nuevo.
Deberás crear la parte del programa que calcula el número total de puntos que un
jugador gana en el juego Galaxy.
Los jugadores acumulan puntos mediante la recolección de objetos.
Los objetos tienen asignados los siguientes puntos:
Estrella = 10 puntos.
Planeta = 20 puntos.
Asteroide = 50 puntos.
Cometa = 100 puntos.
Si un jugador acumula más de 5.000 puntos, en una misma jugada, ganará un bono de
500 puntos.
Implementa pues una jugada, donde le pidamos al usuario el nombre de un objeto y el
número de estos que ha recogido. Mostrando el total de puntos teniendo en cuenta los bonos.
Nota: Usar un switch para decidir los puntos del objeto.*/
/*

Console.WriteLine("Introduce que objeto has recogido");
string objeto = Console.ReadLine();
Console.WriteLine("¿Cuantos objetos has recogido?");
int cantidad = int.Parse(Console.ReadLine());
int puntuacion;
switch (objeto)
{
    case "Estrella":
    puntuacion = 10*cantidad;
    break;
    case "Planeta":
   puntuacion = 20*cantidad;
    break;
    case "Asteroide":
    puntuacion = 50*cantidad;
    break;
    case "Cometa":
    puntuacion = 100*cantidad;
    break;
    default:
    puntuacion = 0*cantidad;
    break;
}
if (puntuacion > 5000)
    puntuacion = puntuacion + 500;
Console.WriteLine(puntuacion);
    */

//ejercico 9

/*
Se pide una nota exacta. Si la nota es 5 se visualizará el texto
APROBADO
, Si la nota es 6 sevisualizará el texto
BIEN
, si la nota es 7 u 8 se visualizará el texto
NOTABLE
, si la nota es 9 o10 se visualizará el texto
SOBRESALIENTE
, si la nota es 4 o menor se visualizará el texto
SUSPENSO
, en otro caso visualizará el texto
NOTA INCORRECTA*/

/*Console.WriteLine("Introduce tu nota");
int nota = int.Parse(Console.ReadLine() ?? "0");
string texto;
switch (nota)
{
    case 5:
    texto= "APROBADO";
    break;
    case 6:
    texto= "BIEN";
    break;
    case 7 or 8:
    texto= "NOTABLE";
    break;
    case 9 or 10:
    texto= "SOBRESALIENTE";
    break;
    case <=4:
    texto= "SUSPENSO";
    break;
    default:
        texto= "NOTA INCORRECTA";
        break;
}
Console.WriteLine(texto);
 */
//EJERCICIO 10
/*Modifica el programa anterior de forma que ahora además, se deba tener en cuenta la nota de
prácticas para realizar la média, siendo ambas exactas.
El resultado será una nota numérica que puede tener decimales, además tanto en las
prácticas como en los exámenes solo se podrán evaluar con tres notas (4, 7, 10).
Con todo esto y las siguientes valoraciones, calcula la nota numérica final:
Si la nota del examen es 4, la nota será la misma que la del examen independientemente
de la de las prácticas.
Si la nota del examen es 7 y la de prácticas es mayor o igual a 7 la nota será la media
entre ambas
Si la nota del examen es 7 y la de prácticas es 4 la nota final será 5
Si la nota del examen es 10 y la de prácticas menor o igual a 7 la nota final será 9
Si la nota del examen es 10 y la de prácticas es 10, la nota final será 11
Se indicará nota incorrecta en caso de introducir una nota no permitida y podemos usar una
ternaria y la variable notaFinal nullable.
Nota: Para hacer este ejercicio deberás usar la expresión switch de C#8 con tuplas.*/
/*
Console.WriteLine("Introduce tu nota de examen");
int examen = int.Parse(Console.ReadLine() ?? "0");
Console.WriteLine("Introduce tu nota de practica");
int practica = int.Parse(Console.ReadLine());
double NotaFinal;
switch(examen)
{
    case 4:
    NotaFinal= 4;
    break;
    case 7 when practica>7:
    NotaFinal= (examen + practica)/2;
    break;
    case 7 when practica== 4:
    NotaFinal= 5;
    break;
    case 10 when practica<=7:
    NotaFinal= 9;
    break;
    case 10 when practica== 10:
    NotaFinal = 11;
    break;
    default:
    Console.WriteLine("Tu nota es incorrecta");
    break;
}
Console.WriteLine($"tu nota es {NotaFinal}");
*/

//Ejercicio 11
/*Una empresa factura a sus clientes el último día de cada mes.
Si el cliente paga del 1 al 10 del mes siguiente se le hace un descuento de 50 centimos o
del 10%, el que sea mayor.
Si paga entre los días 11 y 20 no se le aplica ningún descuento.
Si paga después del día 20 se le penaliza con 1 euro o el 5%, lo que sea mayor.
Se desea un programa que lea los datos del cliente: nombre, dirección, CIF y el importe de
la factura. Tras ello, confeccione una carta dirigida al cliente informándole que tiene una
factura pendiente de ...€ y lo que deberá pagar según realice el pago del 1 al 10, del 11 al 20
o después del 20.

Console.WriteLine("¿Que dia ha pagado?");
uint dia = uint.Parse(Console.ReadLine() ?? "0");
Console.WriteLine("¿Cúal es su nombre?");
string nombre = Console.ReadLine();
Console.WriteLine("¿Cual es el CIF del cliente?");
string CIF = (Console.ReadLine());
Console.WriteLine("¿Cual es su direccion completa?");
string direccion = Console.ReadLine();
Console.WriteLine("¿Cuanto paga en su factura?");
float factura = float.Parse(Console.ReadLine() ?? "0");
string texto;
    if (dia >=1 && dia <=10)
    {
                texto = $"El cliente {nombre} tiene que pagar {factura - 0.5 } euros or {factura * 0.95} euros";
    }
            else if (dia >=11 && dia <=20)
    {
                texto = $"El cliente {nombre} tiene que pagar {factura} euros";
    }
            else if (dia >20 && dia <=31)
    {
                texto = $"El cliente {nombre} tiene que pagar {factura + 1} euros or {factura * 1.05} euros";
    }
            else
    {
                texto= "Intruduce un día válido";
    }
Console.WriteLine(texto);
*/

//ejercicio 12
/*Prepara un programa que lea el importe de la venta y la cantidad entregada por el comprador
y calcule los billetes de 100, 50, 20, 10 y 5 euros, además de las monedas de 2 y 1 euros y
las de 50, 20, 10, 5, 2 y 1 céntimos que se necesitan para efectuar la devolución.*/



//bucles

//bucle while

/*Console.Write("Desea continuar [S|N]: ");
char respuesta = char.Parse(Console.ReadLine() ?? "S");
while (respuesta != 'S' && respuesta != 'N')
{
Console.Write("Desea continuar [S|N]:");
respuesta = char.Parse(Console.ReadLine() ?? "N");
}*/

//bucle contador
/*
int i = 1; // Inicializamos el contador.
string texto = (i++).ToString();
while (i <= 1000) // Al llegar a 101 salimos.
{
texto += $", {i}";
i++; // Lo incrementamos en un valor constante
}
Console.WriteLine(texto);*/

//bucle acumulador


// Entrada: Entrada: Número del que quiero calcular el factorial.
/*Console.Write("Número: ");
int numero = int.Parse(Console.ReadLine() ?? "1");
int i = numero; // i: Contador que lleva la factorización.
long factorial = 1; // factorial: Donde acumulo el factorial.
string cadenaSalida = (i--).ToString( $"{numero}! = {factorial}");
while(i > 0)
{
factorial *= i; // 1 x 2 x … x N
cadenaSalida += $" x {i}";
i--;
}
Console.WriteLine(cadenaSalida + $" = {factorial}")  ; // Salida
    }
}
*/
/*
class Datos
{
public static void Muestra(
string nombre,
string apellido,
ushort edad)
{
Console.WriteLine($" Nombre: {nombre}\n" +
$" Apellido: {apellido}\n" +
$" Edad: {edad}");
}
public static void MétodoSinRetorno()
{
// Llamada desde un método de la misma clase.
Muestra("Xusa", "García", 15);
}
}
*/

/* Programa que calcula y escribe la suma y el producto de los 10
 * primeros números naturales. Se deben usar acumuladores para resolverlo*/

/*namespace Ejercicio1
{
    class Programa
    {
        static void Main();
        {
            int suma =0;
            int producto = 1;
                for (int i = 1; i <=10; i++ )
                {
                    suma= suma + 1;
                    producto= producto*i ;
                Console.WriteLine($"{suma}{producto}");
                }
        }
    }
}

#endregion
*/
//Programa que lee 100 números y cuenta cuántos de ellos son positivos (n > 0)

/*class programa
{

    static void Main()
    {
            int valor;
            int positivos = 0;
                for(int cont =1; cont<=100; cont++);
                {
                    Console.Write("Introduce el valor");
                    valor = int.Parse(Console.ReadLine());
                if (valor>0);
                    positivos++;
                
                }Console.WriteLine($"numeros positivos introducidos {positivos}");*/




        // ejercicio3
        /*
    Programa que lea números hasta que se introduzca un cero y escriba la media de los
    números leídos, sin incluir el 0 en el conteo de números.
    Nota: Se deben usar contadores y acumuladores para resolverlo.*/

        /*float valor;
        int contador = 0;
        float suma = 0;
        float media;
            do{
                Console.WriteLine("Introduce un valor");
                valor = int.Parse(Console.ReadLine());
            if (valor !=0);
                {
                    suma= suma + valor;
                    contador++;
                }

            }while(valor !=0);
                media = suma/(contador);
                Console.WriteLine($"Su media es de {media}");
                }
            }*/
        // ejercicio 4
        /*Programa que lea notas y que termine con el valor -1.
       Las notas deben estar incluidas en el rango que va de 0 al 10, descartando y avisando
       del error si no es una nota permitida.
       La salida nos mostrará la cantidad de dieces que se han introducido.*/
        /*float nota;
        ;
        int cantidaddieces= 0;
            do{
                Console.WriteLine("intoduce la nota");
                nota= int.Parse(Console.ReadLine());
                    if (nota==10)
                    {
                        cantidaddieces++;
                    }
                        else if(nota !=10 || nota <-1 )

                            Console.WriteLine("nota incorrecta");

                            else{
                                cantidaddieces++;
                            }
            }while (nota != -1);
                   if (cantidaddieces>0){
                    Console.WriteLine($"Han habido un total de {cantidaddieces}sobresalientes");
                   }
                   else {
                    Console.WriteLine("no hay sobresalientes");
                   }*/
        // ejercicio 6
        /* */
        /*int numero;
        int maximo= 0;

       do{
           Console.WriteLine("Introduzca un numero");
           numero=int.Parse(Console.ReadLine());
           if (numero>maximo);
               maximo=numero;
       }while(numero !=0);
               Console.WriteLine($"El numero mas grande es {numero}");
               }
           }
       */

        //ejercicio 7
        /* Programa que obtenga el producto de dos números
  enteros positivos mediante sumas sucesivas. */
        /*int numero1, numero2;
        int valor= 0;
        do{
           Console.WriteLine("Introduce un numero");
           numero1= int.Parse(Console.ReadLine());
           Console.WriteLine("Introduce otro numero");
           numero2= int.Parse(Console.ReadLine());

           if (numero1 <0 || numero2< 0)
           {
               Console.WriteLine("Solo se aceptan numeros positivos");

           }

        }while(numero1 !<=0 || numero2 !<=0);

           for(int i= 1; i<= numero2; i++)
               {
                   valor += numero1;
               }
               Console.WriteLine($"{valor}");

              */

        //ejercicio 8
        /*Programa que obtenga el cociente y el resto de dividir dos números enteros positivos
        utilizando restas. Por ejemplo, para calcular n / 2 haga n -= 2 mientras n >= 2 y
        cuente el número de veces que ha restado*/
        /*int dividendo;
        int divisor;
        int cociente=0;
        int i= 1;

            Console.WriteLine("Introduce el dividendo");
            dividendo= int.Parse(Console.ReadLine());
            Console.WriteLine("Introduce el divisor");
            divisor= int.Parse(Console.ReadLine());
                if (dividendo<0 || divisor<0)
                    Console.WriteLine("Introduce un numero positivo");


        while(dividendo>=divisor)
           {dividendo= dividendo-divisor;
            cociente++;
           }
           Console.WriteLine($"cociente={cociente}");
           Console.WriteLine($"El resto es {dividendo}");*/

        //ejercicio 10
        /*Programa que determina si dos números enteros positivos son amigos
     Dos números son amigos si la suma de los divisores del primer número excepto él mismo, es
     igual al segundo numero, y viceversa. Puedes saber un poco más de la historia de esta
     relación entre números leyendo la entrada en la Wikipedia*/
       /* Console.WriteLine("Introduce un numero");
        int numero1 = int.Parse(Console.ReadLine() ?? "0");
        Console.WriteLine("Introduce el segundo numero");
        int numero2 = int.Parse(Console.ReadLine() ?? "0");

        int suma1 = 0;
        int suma2 = 0;
        int i = 1;
        int j = 1;
        do
        {
            if (numero1 % i == 0)
            {
                suma1 = suma1 + i;
            }
            i++;
        } while (i < numero1);
        do
        {
            if (numero2 % j == 0)
            {
                suma2 = suma2 + j;
            }
            // if (numero2 % j == 0) {};
            // suma2 = suma2 + j;
            j++;
        } while (j < numero2);
        if (suma2 == numero1 && suma1 == numero2)
        {
            Console.WriteLine($"{numero1} y {numero2} son amigos");
        }
        else
            Console.WriteLine("Los numeros introducidos no son amigos");

    }

}
//ejercicio 13
/*Pide un número, por ejemplo el 4, y saca en pantalla 1223334444.
Nota: Deber usar bucles for para hacerlo.*/

/*class program
{
    private static void Main()
    {*/
        //Construir un triángulo de N filas con números.
/*Un ejemplo de salida por pantalla puede ser el siguiente:
1
23
345
4567
56789
678901
💡 Tip: Fíjate que el primer número de cada fila sigue una cuenta creciente y también los
números en la columna. Además, fíjate en la última fila, que cuando la cuenta supera 10 lo
que realmente visualicemos es el resto (módulo) de dividir por 10 la cuenta que será un valor
entre 0 y 9.*/
   /* int filas;
    int i= 1;
    Console.WriteLine("Introduce un numero");
    filas=int.Parse(Console.ReadLine());
    int j= 0;
    for(i=1; i<=filas ; i++){
        for ( j=0; j<i; j++){

            Console.Write( (i + j -1)%10 );
            if (j+1==i)
            {Console.Write("\n");
            }
        }
    }
    }
    }
       */
  

    //Ejercicio 4
    /*Igual que el anterior pero para este otro triángulo.
Un ejemplo de salida por pantalla puede ser el siguiente:
3
58
703
9258
💡 Tip: Fíjate que el primer número de cada fila sigue una cuenta creciente de números
impares empezando en 3 y los números en la columna se incrementan de 3 en 3 a partir del
primer número impar de la fila.
Como sucedía en el ejercicio anterior, fíjate en las dos últimas filas, que cuando la cuenta
supera 10 lo que realmente visualicemos es el resto (módulo) de dividir por 10 la cuanta que
será un valor entre 0 y 9.
*/

/*class Programa
{

    static void Main()
    {
        int filas;
        Console.WriteLine("Introduce el numero de filas");
        filas = int.Parse(Console.ReadLine());
        const int x= 3; // x para una costante en este caso igual a 3 ( numero que incrementa )
        int i= 0;
        int j= 0;
    for(i=1; i<= filas; i++)
    {
        for(j=0; j<i; j++)
        {
             Console.Write(((2*i+1)+(j*x))%10); //Con (2*i+1) saco los numeros pares en la primera columna y con i*x las clomunasy com incrementan
        }
           Console.WriteLine();
    }


    }
}*/
//ejercicio 6
/*Programa la generación de una tabla de verdad con unos y ceros con un bucle for anidado.
Las operaciones que mostrará la tabla serán por tanto operaciones de bit.
Para ello el usuario deberá introducir por teclado un carácter con el cual nos indicará la
tabla a generar (&, |, ^).
La decisión de la tabla a mostrar, debe ser mediante una instrucción switch con el
carácter.
En el caso de tratarse de una operación no válida avisaremos de tal hecho y
finalizaremos la ejecución.
Un ejemplo de salida por pantalla puede ser el siguiente:
Introduce una operación de bit (&, |, ^): &
0 & 0 = 0
0 & 1 = 0
1 & 0 = 0
1 & 1 = 1*/
/* class programa
{
     static void Main()
     {
        Console.WriteLine("Inroduce un carácter (&, |, ^)");
        char caracter= char.Parse(Console.ReadLine());
        int i=0;
        int j=0;
        int resultado=0;
        for(i=0; i<=1; i++)
        {
            for(j=0; j<=1; j++)
            {
                switch(caracter)
                {
                    case '&':
                        resultado= i&j;
                        break;
                    case '|':
                        resultado= i|j;
                        break;
                    case '^':
                        resultado= i^j;
                        break;
                   default:
                        Console.WriteLine("Introduce un caracter valido");
                        break;
                 
                }Console.WriteLine($"{i} {caracter} {j} = {resultado}"); 
            }  
        }

        }
}*/

//ejercicio 7
/* Escribe un programa que genere la secuencia de números:
1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5, ..., 1, 2, 3, ... N */
/*int numero;
Console.WriteLine("Introduce un número");
numero= int.Parse(Console.ReadLine());
int i= 0;
int j= 0;
String secuencia= "";
for(i=2; i<=numero; i++)
{
    for(j=1; j<=i; j++)
    {
        secuencia +=$"{j}, ";
    }
}Console.WriteLine(secuencia);*/

//ejercicio 8
/*Un número se dice que es capicúa si leído de derecha a izquierda da el mismo resultado que
leído de izquierda a derecha.
Por ejemplo, los números 22, 343, 5665 o 12321 son capicúas.
Elabora un programa que lea desde teclado un número entero mayor de 9 y devuelva si el
número es capicúa o no.

💡 Tip 1: Una posible solución, puede ser invertir el número mediante un bucle y si el número
invertido es igual al original sin invertir, entonces el número será capicúa.

💡 Tip 2: Para invertir el número podemos ir extrayendo los dígitos de las unidades (por la
derecha) del número original a través de obtener el resto de dividir por 10, sumar el dígito a
las unidades del número invertido. Estás unidades la próxima vez que se añadan otras
pasarán a ser las decenas, después las centenas, etc. y así mientras añadamos los dígitos de
que extraemos de las unidades del número original.

Ejemplo de algoritmo de inversión:
Para invertir n = 2643 haremos ...
1. n = 2643 / 10 = 264 resto 3 -> i = 0 * 10 + 3
2. n = 264 / 10 = 26 resto 4 -> i = 3 * 10 + 4
3. n = 26 / 10 = 2 resto 6 -> i = 34 * 10 + 6
4. n = 2 / 10 = 0 resto 2 -> i = 346 * 10 + 2 = 3462
5. Como n = 0 finaliza el algoritmo.*/
/*Console.WriteLine("Introduce un número mayor que");
int numero= int.Parse(Console.ReadLine());
int i=0;
if(numero>9)
{
    string texto=numero.ToString();
    bool numeroCapicua= true;
for(i=0; i < texto.Length / 2; i++)
{
    if (texto[i] != texto[texto.Length-1-i])
        {
            numeroCapicua= false;
            break;
        }
}
if(numeroCapicua)
{
    Console.WriteLine("El número introducido es capicua");
}
    else
    {
        Console.WriteLine("El numero introducido no es capicua");
    }

}
else
{
    Console.WriteLine("Introduce un número valido");
}
*/

//ejercicio 9
/*Crea un programa que muestre en pantalla la siguiente pirámide:
         1
        232
       34543
      4567654
     567898765
    67890109876
Se introducirá por teclado un número que indique la profundidad de la pirámide.
Nota: Para rellenar de blancos cada línea nos fijaremos en la profundidad de la pirámide. Si la
profundidad de la pirámide es n requeriremos n-1 blancos para la primera línea, n-2 para la
segunda, n-3 para la tercera y así sucesivamente */
/*class program
{
    static void Main()
    {
        Console.Write("Introduce el numero de altura");
        int altura= int.Parse(Console.ReadLine());
        int i;
        int j;
    for(i=1; i<=altura; i++)
    {
        for(j=1; j<=altura-i; j++)
        {
            Console.Write(" ");
        }
            Console.WriteLine(i);
        for(j=1; j==i; i++)
        {
             Console.WriteLine(i);
        }
            
        
    }
    */

//// Ejercicio 10
// 12345 
// 2
// 3
// 4
// 55555
/*int n=5;
for(int i=1; i<=n; i++ )
{
    if(i==1)
    {
        for(int j=1; j<=n; j++)
        {
        Console.Write(j);
        }
        Console.WriteLine();
    }
    else if (i==5)
    {
        for(int j=1; j<=n; j++)
        {
            Console.Write(i);
        }
            Console.WriteLine();
    }
    else{
        Console.WriteLine(i);
    }
}
*/
//Ejercicio 11
// 15
// 24
// 33
// 42
// 51
// 
/*int n=5;
for(int i= 1;i<=n;i++)
{ 
    
    
    for( int j= 1; j<=2; j++)
    {
        if(j==1)
        {
        Console.Write(i);
        }
        else{
        Console.Write(6-i);
        }
    }
        
    Console.WriteLine();
    }
    */


//Ejercicio 13
    // 11111 22222 33333 44444 55555
/*int n=5;
for(int i=1; i<=n; i++)
{
    for(int j=1; j<=n; j++)
    {
       Console.Write(i);
    }
    Console.Write(" ");
}*/
//Ejercicio 14
// 1 22 333 4444 55555
/*int n= 5;
for(int i= 1; i<=n; i++)
{
    for(int j=1; j<=i; j++)
    {
        Console.Write(i);
    }
        Console.Write(" ");
}*/
//Ejercicio 15
//11111 2222 333 44 55
/*int n= 5;
for(int i=1; i<=n; i++)
{
    for(int j=1; j<=n-1+i; j++)
    {
        Console.Write(i);
    }
        Console.Write(" ");
}
}
}*/

//ejercicio 2
/*class ejercicio2
{
    static double Eleva(double a, double b)
    {
        return(Math.Pow(a,b));
    }
        static void Main()
        {
            Console.WriteLine("Introduce un numero");
            double x= double.Parse(Console.ReadLine());

            Console.WriteLine("Introduce un numero");
            double y= double.Parse(Console.ReadLine());

            Console.WriteLine("Introduce un numero");
            double m= double.Parse(Console.ReadLine());

            double k= (Eleva(x,4) + Eleva(y,m))/2;
            Console.WriteLine(k);
        }
}
*/
//ejercico 3
/*Escribe un algoritmo que, dados por teclado cinco días de la semana, escritos en forma de número, muestre el nombre del día asociado a cada uno de ellos.
Para ello, implementa el procedimiento
DiaSemana, que dado un número escriba en pantalla el día correspondiente
(utilizando switch)..
.
Nota:
el parámetro del procedimiento será de
entrada
(referencia). Además deberá comprobar que el número de entrada esté en el rango de 1 a 7 indicando, si es necesario, que la entrada noha sido valida.*/
/*class ejercicio3
{
    static string DiaSemana (ref int dia)
        {string nombre;
        switch (dia)
            {
                case 1:
                nombre= "Lunes";
                break;

                case 2:
                nombre= "Martes";
                break;

                case 3:
                nombre= "Miercoles";
                break;

                case 4:
                nombre= "Jueves";
                break;

                case 5: 
                nombre= "Viernes";
                break;

                case 6:
                nombre = "Sabado";
                break;

                case 7:
                nombre = "Domingo";
                break;

                default:
                nombre = "ERROR";
                break;
            }
    return nombre;
    }
        static void Main()
        {
            for(int i=1;i<=5; i++)
            {
                Console.WriteLine("Introduce un numero de la semana del 1 al 7");
                int dia= int.Parse(Console.ReadLine());
                string nombreDia = DiaSemana(ref dia);
                Console.WriteLine(nombreDia);
            }
                
        }
}*/

//Ejercicio 7
/*Construye un programa que dados tres números enteros correspondientes a la hora, minutos ysegundos actuales, calcula la hora (en el mismo formato) que será un segundo más tarde. Paraello, se deben diseñar dos métodos:
•
HoraASegundos
que dados tres argumentos de entrada correspondientes a hora, minutos ysegundos, devuelva la conversión de dicha hora a segundos desde las 00:00:00.
•
SegundosAHora
, que dado un argumento de entrada correspondiente a una hora en segundosdesde las 00:00:00, la convierta en horas, minutos y segundos y la devuelva.
Devolverás lainformación mediante parámetros de salida.
Nota:
El algoritmo debe leer la hora en formato HH, MM y SS, después transformarla a segundos(con HoraASegundos), sumarle uno a dichos segundos y después volver a transformarla en HH,MM y SS (con SegundosAHora).*/
// class ejercicio7
// {
//     static int HoraASegundos(int horas, int minutos, int segundos)
//     {
//         horas= horas*3600;
//         minutos= minutos*60;
//     return(horas+minutos+segundos+1);
//     }
    
//     static (int, int, int) SegundosHora(int segundos)
//     {
//         int horas= segundos/3600;
//         int resto= segundos%3600;
//         int minutos= resto/60;
//         int Segundos= resto%60;
//     return(horas,minutos,Segundos);
//     }
//         static void Main()
//         {
//             Console.WriteLine("introduce horas");
//             int horas= int.Parse(Console.ReadLine());
//             Console.WriteLine("introduce minutos");
//             int minutos= int.Parse(Console.ReadLine());
//             Console.WriteLine("introduce segundos");
//             int segundos= int.Parse(Console.ReadLine());
//         int ASegundos= HoraASegundos(horas, minutos, segundos);
//         Console.WriteLine(ASegundos);
//         var aHora= SegundosHora(ASegundos);
//         Console.WriteLine(aHora);
//         }
// }
// //ejercicio 8 
// Escribe un método llamado
// Lee
// que que obtenga los siguientes datos de un usuario: número dedepartamento, coste por hora y horas trabajadas.
// Usarás tuplas para resolverlo
// Escribe un método llamado
// Salario
// que para calcular el salario semanal multiplique el coste porhora por el número de horas trabajadas.
// Escribe un método llamado
// Muestra
// que muestre el salario semanal, el número deldepartamento, el coste por hora y las horas trabajadas. Podéis fijaros en el siguiente DEM:
// class ejercicio8
// {
//     static (int,int,int) Lee()
//     {
//         Console.WriteLine("introduce numero de departamento");
//         int numeroDep= int.Parse(Console.ReadLine());
//         Console.WriteLine("introduce el coste por hora");
//         int costeHora= int.Parse(Console.ReadLine());
//         Console.WriteLine("introduce las horas trabajadas");
//         int horasTrabajadas= int.Parse(Console.ReadLine());
//     return(numeroDep,costeHora,horasTrabajadas);
//     }
//     static int Salario(int costeHora, int horasTrabajadas )
//     {
//         int salario= costeHora*horasTrabajadas;
//     return(salario);
//     }

//     static void Muestra(int SalarioSemanal, int numDep, int costeHora, int horasTrabajadas)
//     {
//         Console.WriteLine($"El salario semanal es {SalarioSemanal} euros, el numero de departamento es el {numDep}, el coste por hora es {costeHora} horas y las horas trabajadas son {horasTrabajadas} horas");
   
//     }
//     static void Main()
//     {
//        (int numeroDep, int costeHora, int horasTrabajadas)costes= Lee();
//        int salario= Salario(costes.horasTrabajadas,costes.costeHora);
//        Muestra(salario , costes.numeroDep,  costes.costeHora,  costes.horasTrabajadas);
    
//     }

// }


// Ejercicio 1
// Crea un método que me devuelva el número de vocales de una cadena
// Si cadena = "Hola, mundo" el programa dirá que tiene 4 vocales

// static int ContarVocales(string c1)
// {
//     int incremento= 0;
//     Console.WriteLine("Introduce una cadena");
//     Console.ReadLine();
//     string vocales="aeiouAEIOU";
//     for (int i=0; i<c1.Length; i++)
//     {
//         if(vocales.Contains(c1));
//         incremento ++;
//     }
//     return(incremento);
// }

// static void Main()
// {
//    int conteo= ContarVocales(c1);
// }

// Ejercicio 2
// Crea un método que me devuelva el número de consonantes de una cadena
// Si cadena = "Hola, mundo" el programa dirá que tiene 5 consonantes

   
//  static int ContarConsonantes(string cadena)
//  {
//     int contador=0;
//     cadena= "Hola, mundo";
//     string consonantes= "qwrtypsdfghjklzxcvbnmQWRTYPSDFGHJKLZXCVBNM";
//     for(int i=0; i<cadena.Length; i++)
//     {
//         if(consonantes.Contains(cadena));
//         contador++;
//     }
//     return(contador);
//  }  

//EJERCICIO 10
// Introduce por teclado una secuencia de calificaciones de los alumnos de un instituto (números enteros entre cero y diez).

// La secuencia termina con la introducción de un número menor que cero o mayor que diez.
// Se supone que como máximo podemos tener 25 alumnos.
// Se trata de obtener la frecuencia de las notas (número de veces que cada nota aparece).
// 💡 Pista: Puedes usar un array para guardar las frecuencias, relacionando la posición del array con la nota del alumno. Incrementando el contenido de la posición i, cada vez que salga una nota n.
// Ejemplo: Imagina que tengo 10 notas notas = [2][4][4][5][5][5][6][7][7][9]
// En un array de tamaño 11 llamado frecuenciaNotas = [0][0][0][0][0][0][0][0][0][0][0] guardaremos la cuenta de cada una de ellas. Fíjate, que los índices en ese array van del 0 al 10 que son los posibles valores válidos de notas. Por tanto, en la posición de índice 5 guardaremos la cuenta de las veces que ha aparecido la nota 5 en notas que es 3.

// Ejercicio 1
// Crea un método que me devuelva el número de vocales de una cadena
// Si cadena = "Hola, mundo" el programa dirá que tiene 4 vocales


                // Ejercicio 1. Cadenas (4 puntos)
/* ----------------------------------------------------------------------------
1. Dada una cadena de texto, cuénta cuántos números aparecen en la cadena de texto
   Entendemos como número cualquier secuencia de uno o más dígitos
   Por ejemplo, la siguiente cadena:
   "En un lugar +2 de la Mancha de 34 cuyo nombre 10.25 no quiero acor3darme"
   Contiene los siguientes números: 2, 34, 10, 25 y 3
   La salida del programa será: "La cadena contiene 5 números"
2. A continuación sustituye cada dígito que aparezca en la cadena de texto por su expresión como cadena de texto, es decir
   si aparece el dígito '0' lo sustituirá por la cadena de texto "cero", el '1' por "uno" y así hasta el '9' por "nueve"
   Las cadenas de texto de los dígitos irán separadas por espacios en blanco
   Por ejemplo, para la siguiente cadena:
   "En un lugar +2 de la Mancha de 34 cuyo nombre 10.25 no quiero acor3darme"
   La salida del programa será: "En un lugar + dos  de la Mancha de  tres  cuatro  cuyo nombre  uno  cero . dos  cinco  no quiero acor tres darme"
3. A continuación, harás el mismo ejercicio anterior, pero cada número comenzará con un corchete abierto '[' y acabará con un corchete cerrado ']'
   Por ejemplo, el número "34" aparecerá como "[tres, cuatro]" (respetando los epacios en blanco y las comas)
   Por ejemplo, para la siguiente cadena:
   "En un lugar +2 de la Mancha de 34 cuyo nombre 10.25 no quiero acor3darme"
   "En un lugar +[dos] de la Mancha de [tres, cuatro] cuyo nombre [uno, cero].[dos, cinco] no quiero acor[tres]darme"
*/

// Console.WriteLine("Introduce una cadena");
// string cadena= Console.ReadLine();
// int cantidadNumeros=ContarNumerosEnCadena(cadena);
// Console.WriteLine("La cadena contiene"+" " +cantidadNumeros+" "+ "numeros");
// string cadenaCambiada= ReemplazarNumerosConLetra(cadena);
// Console.WriteLine("la nueva cadena es"+" "+cadenaCambiada);
//            }
// static int ContarNumerosEnCadena(string cadena)
//     {
//         string numeros = "1234567890";
//         int cantidadNumeros = 0;
        
//         for (int i = 0; i < cadena.Length; i++)
//         {
//             // Verifica si el carácter actual es un dígito
//             if (numeros.Contains(cadena[i].ToString()))
//             {
//                 // Se encontró un dígito, incrementa la cuenta
//                 cantidadNumeros++;
//             }
//         }

//         return cantidadNumeros;
//     }


//  static string ObtenerNumeroConLetra(string digito)
//     {
//         switch (digito)
//         {
//             case "0": return "cero"+" ";
//             case "1": return "uno"+" ";
//             case "2": return "dos"+" ";
//             case "3": return "tres"+ " ";
//             case "4": return "cuatro"+" ";
//             case "5": return "cinco"+ " ";
//             case "6": return "seis"+ " ";
//             case "7": return "siete"+ " ";
//             case "8": return "ocho"+ "";
//             case "9": return "nueve"+ " ";
//             default: return digito;
//         }
//     }

//     static string ReemplazarNumerosConLetra(string cadena){
//         StringBuilder ab= new StringBuilder();
//             foreach(char caracter in cadena)
//             {
//                 if(char.IsDigit(caracter)){
//                     string numeroConLetra = ObtenerNumeroConLetra(caracter.ToString());
//                     ab.Append(numeroConLetra);
//                 }
//                 else{
//                     ab.Append(caracter);
//                 }

                
//             }
//             return ab.ToString();

   /* static bool esPrimo(int numero)
    {
        bool primo = true;

        for (int i = 2; i < numero; i++)
        {
            if (numero % i == 0)
            {
                primo = false;
            }
        }

        return primo;
    }

    static int sumaCifras(int anyo)
    { // siempre que necesite sumar los dígitos de uun número, usaré esta función
        int suma = 0;

        while (anyo != 0)
        {
            suma = suma + (anyo % 10); // acumulamos la suma del resto de la división
            anyo /= 10; // moviendo la coma del número a la izquierda
        }

        return suma;
    }

    static void Main()
    {

        /* int num1, num2;

         Console.WriteLine("Escribe el primer número: ");
         num1 = int.Parse(Console.ReadLine());

         Console.WriteLine("Escribe el segundo número: ");
         num2 = int.Parse(Console.ReadLine());

         if (esPrimo(num1) == true && esPrimo(num2) == true)
         {
             int suma = num1 + num2;
             Console.WriteLine("La suma es: " + suma);

             if (esPrimo(suma) == true)
             {
                 Console.WriteLine("La suma es: " + suma + " es un también un número primo");
             }
             else
             {
                 Console.WriteLine("La suma NO es: " + suma + " es un también un número primo");
             }
         }
         else
         {
             Console.WriteLine("Uno de los números no es primo");
         }*/

        /*int dia;
        int mes;
        int anyo;
        
        Console.WriteLine("Escribe el día de nacimiento: ");
        dia = int.Parse(Console.ReadLine());

        Console.WriteLine("Escribe el mes de nacimiento: ");
        mes = int.Parse(Console.ReadLine());

        Console.WriteLine("Escribe el anyo de nacimiento: ");
        anyo = int.Parse(Console.ReadLine());

        int semissuma_numero_magico = dia + mes + sumaCifras(anyo);
        int numero_magico = sumaCifras(semissuma_numero_magico);

        Console.WriteLine("El número mágico es: " + numero_magico);   


        string cadena = "Hola, bienvenidos a la clase de programación en c#";

        // longitud de cadena
        Console.WriteLine(cadena.Length);

        //int contador = 0;

        // recorrer una cadena letra a letra
        /*for(int i = 0; i < cadena.Length; i++){
             Console.WriteLine(cadena[i]);
        }*/

        /*char aBuscar = 'a';

        for (int i = 0; i < cadena.Length; i++)
        {
            if (cadena[i].Equals(aBuscar))
            {
                contador++;
            }
        }

        Console.WriteLine("Espacios en blanco = " + contador);

        // elimina un ccaraccter de una cadena
        cadena = cadena.Replace(",", "");

        // devuelve una cadena según el patrón a buscar
        string[] palabras = cadena.Split(' ');

        for (int i = 0; i < palabras.Length; i++)
        {
            Console.WriteLine(palabras[i]);
        }
        Console.WriteLine(palabras.Length);

        

    }*/

/*      EJERCICIO 1 DE CADENAS

        
    static void Menu(){

        Console.WriteLine("***** OPCIONES ******");
        Console.WriteLine("1. Leer cadea y mostrar longitud");
        Console.WriteLine("2. Introducir dos cadenas y operaciones");
        Console.WriteLine("3. Introducir cadena y mostrar en mayúscula");
        Console.WriteLine("4. Introducir cadena y concatenar una nueva");
        Console.WriteLine("5. Introducir cadena y eliminar N caracteres");
        Console.WriteLine("6. Introducir cadena y eliminar espacios, saltos de líenas y puntos");
        Console.WriteLine("7. Introducir cadena y un número");
        Console.WriteLine("8. Introducir texto y dos cadenas");
        Console.WriteLine("9. Salir");
    }

    static void Main()
    {
       
       int opcion = 0;

       while(opcion != 9){
            Menu();
            Console.WriteLine("Selecciona una opción: ");
            opcion = int.Parse(Console.ReadLine());

            switch (opcion){

                case 1: 
                    Console.WriteLine( "Leer cadena y mostrar longitud");
                    string cadena = Console.ReadLine();
                    Console.WriteLine("La cadena tiene de longitud: " + cadena.Length);
                    break;

                case 2: 
                    Console.WriteLine("Introduce dos cadenas");

                    Console.WriteLine("Introduce la primera cadena: ");
                    string cadena1= Console.ReadLine();

                    Console.WriteLine("Introduce la segunda cadena: ");
                    string cadena2= Console.ReadLine();

                    // devuelve la posicion en la que una cadena contiene a la otra
                    int pos = cadena1.LastIndexOf(cadena2);

                    if(pos == -1){
                        Console.WriteLine("La cadena2 no está en la cadena1");
                    }else{  
                        Console.WriteLine("La cadena2 está en la posición " + pos + " de la cadena1");
                    }

                    break;

                case 3: 
                        Console.WriteLine("Introduce una cadena");
                        string cadena3= Console.ReadLine();
                        cadena3= cadena3.ToUpper();
                        Console.WriteLine(cadena3);
                    break;

                case 4:
                        Console.WriteLine("Introduce una cadena: "); 
                        string cadena4 = Console.ReadLine();

                        string cadena5 = " LA CADENA FIN HA SIDO AÑADIDA A NUESTRA CADENA ";

                        // unir dos cadenas sin el operador  +
                        string cadenaFinal = string.Concat(cadena4,cadena5);

                        Console.WriteLine(cadenaFinal);
                    break;

                case 5: 
                        Console.WriteLine("Introduce una cadena");
                        string cadena6= Console.ReadLine();

                        Console.WriteLine("introduce la posición: ");
                        int pos1 = int.Parse(Console.ReadLine());

                        Console.WriteLine("introduce la catidad de caracteres a eliminar: ");
                        int nCaracter = int.Parse(Console.ReadLine());

                        // elimina caracteres de una cadena a partir de uan posición dada
                        cadena6 = cadena6.Remove(pos1,nCaracter);

                        Console.WriteLine(cadena6);
                        
                    break;

                case 6: 
                        Console.WriteLine("Introduce una cadena");
                        string cadena7= Console.ReadLine();

                        cadena7 = cadena7.TrimEnd(' ','\n','.');

                         Console.WriteLine(cadena7);
                    break;

                case 7: 
                    Console.WriteLine("Introduce una cadena");
                    string cadena8= Console.ReadLine();
                    Console.WriteLine("Introduce un numero");
                    int numero= int.Parse(Console.ReadLine());

                    cadena8 = cadena8.PadRight(cadena8.Length + numero,'!');

                      Console.WriteLine(cadena8);
                    break;

                case 8: 
                    Console.WriteLine("Introduce un texto");
                    string texto= Console.ReadLine();
                    Console.WriteLine("Dame la primera cadena");
                    string cadena9= Console.ReadLine();
                    Console.WriteLine("Dame la segunda cadena");
                    string cadena10= Console.ReadLine();

                    texto = texto.Replace(cadena9,cadena10);

                    Console.WriteLine(texto);
                    break;

                case 9: 
                    opcion = 9;
                    Console.WriteLine("Has finalizado el programa !!!");
                    break;

                default:
                    Console.WriteLine("Seleccione una opción válida");
                    break;
            }

       }
        
        // EJERCICIO 3 (AHORCADO)

        static void Main(){

        Console.WriteLine("Entre la palabra a adivinar: ");
        string palabra = Console.ReadLine().ToUpper();

        Console.WriteLine("Entre el número máximo de fallos: ");
        int fallos = int.Parse(Console.ReadLine());

        int contador_fallos = 0;

        char []letrasAcertadas = new char[palabra.Length];
        char []letraFalladas = new char[fallos];

        // Inicializar el array con guinoes bajos
        for(int i = 0; i < letrasAcertadas.Length; i++){
            letrasAcertadas[i] = '_';
        }

        while(contador_fallos < fallos){

            Console.WriteLine("Palabra: " + string.Join(" ", letrasAcertadas));
            Console.WriteLine("Fallos: " + string.Join(" ", letraFalladas));

            Console.WriteLine("Entre una letra: ");
            char letra = char.ToUpper(Console.ReadLine()[0]);

            if(Array.IndexOf(letrasAcertadas,letra) != -1){
                Console.WriteLine("Ya has introducido esa letra");
                continue;
            }

            if(palabra.Contains(letra)){

                for(int i = 0; i < palabra.Length; i++){
                    if(palabra[i] == letra){
                        letrasAcertadas[i] = letra;
                    }
                }


            }else{
                letraFalladas[contador_fallos] = letra;
                contador_fallos++;
            }

            if(string.Join("", letrasAcertadas) == palabra){
                Console.WriteLine("Has adivinado la palabra: " + palabra);
                break;
            }

        }

        if(contador_fallos == fallos){
            Console.WriteLine("Has superado el número máximo de fallos");
            Console.WriteLine("La palabra a adivinar era: " + palabra);
        }

    }
        
       

    }

    // EJEJERCICIO 2 STRING BUILDER

         static string funcionEspecular(string frase){

        StringBuilder resultado = new StringBuilder();
        string []palabras = frase.Split(' ');

       foreach (string palabra in palabras)
        {
            StringBuilder palabraInvertida = new StringBuilder();
            for (int i = palabra.Length - 1; i >= 0; i--)
            {
                palabraInvertida.Append(palabra[i]);
            }
            resultado.Append(palabraInvertida + " ");
        }

        return resultado.ToString();
    }

    static string cambiarCaracter(string cadena){

        Random random = new Random();

        StringBuilder resultado = new StringBuilder();

        string caracteresEspeciales = ",:.;?¿!¡";

        foreach(char caracter in cadena){
            if(caracteresEspeciales.Contains(caracter)){
                char caraterAleatorio = (char) random.Next(224,238);
                resultado.Append(caraterAleatorio);
            }else{
                resultado.Append(caracter);    
            }
        }

        return resultado.ToString();
    }

    static string quitarEspaciosBlanco(string cadena){
       
        StringBuilder resultado = new StringBuilder();

        foreach(char caracter in cadena){
            if(caracter != ' '){
                resultado.Append(caracter);    
            }
        }

        return resultado.ToString();
    }

    static void Main(){
        Console.WriteLine("Introduce la frase a ofuscar");        
        string cadena = Console.ReadLine();
        
        if(cadena[cadena.Length-1] == '.'){
            Console.WriteLine(cadena);

            cadena = cadena.Replace(".",",");

            cadena = funcionEspecular(cadena);
            Console.WriteLine(cadena);

            cadena = cambiarCaracter(cadena);
            Console.WriteLine(cadena);
            
            cadena = quitarEspaciosBlanco(cadena);
            Console.WriteLine(cadena);
        }

    }
    //EJERCICIO CORTO ARRAYS 1

    static void Main(){

    Console.WriteLine("Tamaño del array: ");
    int n = int.Parse(Console.ReadLine());

    int[] array = new int[n];

    Random random = new Random();

    for(int i = 0; i < n; i++){
        array[i] = random.Next(1,100);
    }

    Console.WriteLine("Contenido del array: ");

    foreach(int numero in array){
        Console.Write(numero+" ");
    }

   }

   //EJERCICIO CORTO 2 ARRAYS 

    static void Main(){
        int n = 10;
        double[] array = new double[n];
        Random random= new Random();
    
        for(int i=0; i<n; i++)
        {
            array[i]= random.NextDouble() * 100d;
        }


        Console.WriteLine("Posiciones Múltiplos de 4: ");
        for(int i = 1; i < array.Length; i++){
            if(i % 4 == 0){
                Console.WriteLine(array[i]);
            }
        }


   }

   // EJERCICIO CORTO 3  ARRAYS 

     static void Main(){
        int n = 10;
        double[] array = new double[n];
        Random random= new Random();
        
        double suma = 0;

        for(int i=0; i<n; i++)
        {
            double numero = random.NextDouble() * 100d;            
            array[i] = numero;
            suma += numero; // acumular  la semisuma de cada numero
        }

        Console.WriteLine("La suma es: " + suma);
   }

        EJERCICIO CORTO 5 ARRAYS

          static void Main()
   {
    int n= 10;
    int [] array= new int [n];
    Random random= new Random();
    for(int i=0; i<n; i++)
    {
        array[i]= random.Next(1, 100);
    }
    foreach(int numero in array)
    {
        Console.Write(numero+ " ");
    }

    Console.WriteLine("");
    Console.WriteLine("Números pares - posición");
    
    for(int i=0; i<array.Length; i++){
        if(array[i] % 2 == 0){
            Console.WriteLine(array[i]+" - " + i);
        }
    }

   }

   // ejercicio 6

   static void Main(){
    int n= 10;
    Random random= new Random();
    int [] array= new int[n];

    for(int i=0; i<n; i++){
        array[i]= random.Next(1,200);
        Console.Write(array[i]+" ");
    }

    Console.WriteLine("");
    int m = array[0]; // inicializar la mayor con el primer valor
    int posM = 0; // inicializo la posición del mayor

    for(int i=0; i < array.Length; i++){

        if(array[i] > m){
            m = array[i];
            posM = i;
        }

    }

    Console.WriteLine("EL número mayor es: " + m + " y está en la posición: " + posM);

  }

  // ARRAYS EJERCICIO 7

   static void Main()
    {
        int n = 10;
        int[] V = new int[n];
        int[] P = new int[n];
        int[] I = new int[n];

        int num = 0;

        Random random = new Random();

        for (int j = 0; j < n; j++)
        {
            num = random.Next(1, 100);
            V[j] = num;

            if (num % 2 == 0)
            {
                P[j] = num;
            }
            else
            {
                I[j] = num;
            }
        }

        Array.Sort(P); // ordenar creciente
        Console.WriteLine("***** NÚMERO PARES *****");
        for (int m = 0; m < P.Length; m++)
        {
            if (P[m] > 0)
            {
                Console.WriteLine(P[m]);
            }
        }

        Array.Sort(I);
        Array.Reverse(I);
        Console.WriteLine("***** NÚMERO IMPARES *****");
        for (int r = 0; r < I.Length; r++)
        {
            if (I[r] > 0)
            {
                Console.WriteLine(I[r]);
            }
        }
        }

        //ARRAYS EJERCICIO 8 

          static bool esCapicua(char[] numero){

        bool capicua = true;

        int inicio = 0;
        int fin = numero.Length - 1;

        while(inicio < fin){
            if(numero[inicio] != numero[fin]){
                capicua = false;
            }
            inicio++;
            fin--;
        }

        return capicua;
    }

   static void Main()
   {
    Console.WriteLine("Introduce un número entero");
    char[] numero = Console.ReadLine().ToCharArray();

    bool capicua = esCapicua(numero);

    if(capicua == true){
        Console.WriteLine(numero);
        Console.WriteLine("El número es capicúa");
    }else{
         Console.WriteLine(numero);
        Console.WriteLine("El número NO es capicúa");
    }
   }

   //EJERCICIO 9 ARRAYS

     static void Main()
    {

        int opcion = 0;
        int n = 20;

        char[] contrasenya_actual = new char[n];

        while (opcion != 3)
        {

            Console.WriteLine("***** OPCIONES ******");
            Console.WriteLine("1. Registrarse en el sistema");
            Console.WriteLine("2. Entrar en el sistema");
            Console.WriteLine("3. Salir");

            opcion = int.Parse(Console.ReadLine());

            switch (opcion)
            {
                case 1:
                    Console.WriteLine("________________________");
                    Console.WriteLine("Registrarse: ");

                    char[] contraseya = new char[n];
                    char[] comp_contraseya = new char[n];

                    Console.Write("Contraseña: ");
                    contraseya = Console.ReadLine().ToCharArray();

                    Console.Write("Comprobar Contraseña: ");
                    comp_contraseya = Console.ReadLine().ToCharArray();

                    bool iguales = true;

                    for (int i = 0; i < contraseya.Length; i++)
                    {
                        if (contraseya[i] != comp_contraseya[i])
                        {
                            iguales = false;
                        }
                    }

                    if (iguales == true)
                    {
                        contrasenya_actual = contraseya;
                        Console.WriteLine("REGISTRO EXISTOSO !!");
                    }
                    else
                    {
                        Console.WriteLine("LAS CONTRASEÑAS NO COINCIDEN !!");
                    }
                    Console.WriteLine("________________________");

                    break;

                case 2:
                    Console.WriteLine("________________________");
                    Console.WriteLine("Entrar: ");

                    char[] contrasenya1 = new char[n];
                    Console.Write("Introduce contraseña: ");
                    contrasenya1 = Console.ReadLine().ToCharArray();

                    bool iguales1 = true;

                    if (contrasenya_actual.Length == contrasenya1.Length)
                    {
                        for (int i = 0; i < contrasenya_actual.Length; i++)
                        {
                            if (contrasenya1[i] != contrasenya_actual[i])
                            {
                                iguales1 = false;
                            }
                        }

                        if (iguales1 == true)
                        {
                            Console.WriteLine("La contraseña es correcta !!");
                        }
                        else
                        {
                            Console.WriteLine("La contraseña es incorrecta !!");
                        }

                    }
                    else
                    {
                        Console.WriteLine("La contraseña es incorrecta !!");
                    }


                    Console.WriteLine("________________________");

                    break;

                case 3:
                    Console.WriteLine("Ha finalizado el PROGRAMA !!");
                    break;

                default:
                    Console.WriteLine("Selecciona una opción válida");
                    break;
            }

        }

    }

    //EJERCICIO ARRAYS 10 

     static void Main()
    {

        int alumnos = 25;

        int[] calificaciones = new int[alumnos];
        int[] frecuencias = new int[alumnos];
        int pos = 0;

        int nota = 5;

        while (nota > 0 && nota <= 10)
        {
            Console.WriteLine("Introduce una nota: ");
            nota = int.Parse(Console.ReadLine());
            if (nota > 0 && nota <= 10)
            {
                calificaciones[pos] = nota;
                pos++;
            }
        }

        Console.WriteLine("****** NOTAS ******");
        for (int i = 0; i < calificaciones.Length; i++)
        {
            if (calificaciones[i] > 0)
            {
                Console.WriteLine(calificaciones[i]);
            }
        }

        Console.WriteLine("****** FRECUENCIAS NOTAS ******");
        for (int i = 0; i < calificaciones.Length; i++)
        {
            int num = calificaciones[i];
            int contador = 0;

            for (int j = 0; j < calificaciones.Length; j++)
            {
                if (num == calificaciones[j])
                {
                    contador++;
                }
                frecuencias[i] = contador;
            }
        }

        for (int i = 0; i < frecuencias.Length; i++)
        {
            if (frecuencias[i] > 0 && calificaciones[i] > 0)
            {
                Console.WriteLine(calificaciones[i] + " **** " + frecuencias[i]);
            }
        }


    }

	// EJERCICIO 11 ARRAYS

static void Main()
    {


        int n = 10;
        //int[] numeros = { 3, 2, 1, 4, 5, 6, 7, 8, 9, 4 };

        int[] numeros = new int[n];
        int[] numerosInvertidos = new int[n];
        Random random = new Random();

        Console.WriteLine("Array Inicial: ");
        for (int i = 0; i < numeros.Length; i++)
        {
            numeros[i] = random.Next(1, 11);
            Console.Write(numeros[i] + " ");
        }

        int ultimoNumero = numeros[numeros.Length - 1];
        numerosInvertidos[0] = ultimoNumero;

        for (int i = 1; i < numeros.Length; i++)
        {
            numerosInvertidos[i] = numeros[i - 1];
        }

        Console.WriteLine("\nArray Desplazado: ");
        for (int i = 0; i < numerosInvertidos.Length; i++)
        {
            Console.Write(numerosInvertidos[i] + " ");
        }


    }

    //EJERCICIO 4 ARRAYS

    static char GenerarCaracterAleatorio(){
                Random random = new Random();
                int numeroAleatorio= random.Next(65,122);
                char caracterAleatorio= (char)numeroAleatorio;
                return(caracterAleatorio);
               }

               static void Main(){
                int n=10;
                char[] array = new char[n];
                for(int i=0; i<n; i++){
                    char caracterAleatorio= GenerarCaracterAleatorio();
                    array[i]=caracterAleatorio;
                    if(char.IsUpper(caracterAleatorio)){
                        array[i]=char.ToLower(caracterAleatorio);
                    }else{
                        array[i] = char.ToUpper(caracterAleatorio);
                    }
                }
                
                Console.WriteLine("Array modificado: ");
                foreach(char caracter in array){
                    Console.Write(caracter+ " ");
                }
                
            }
    
*/

/*class program{
            
            
           
            // Ejercicio 3. Cadenas (4 puntos)

/*----------------------------------------------------------------------------
Crea un método al que le pasamos una cadena y devolverá otra cadena con los caracteres
que estén repetidos en la cadena original convertidos a un único carácter.
Por ejemplo:
Convertirá la cadena "Hoolaa, muuuundo" en "Hola, mundo"
Crea un main que pida al usuario una cadena de texto y que imprima la cadena resultante.
Usa stringbuilder para crear la cadena resultante.
Si al método se le pasa la cadena vacía o null, devolverá la cadena vacía o null.

  
*/
/*static void Main(){
            
Console.WriteLine("Introduce una cadena:");
string cadena= Console.ReadLine();
string cadenaResultante= ModificarCadena(cadena); 
Console.WriteLine("La cadena modificada es "+cadenaResultante);
}
static string  ModificarCadena (string  cadena){
    string cadenaResultante= " ";
    StringBuilder CadenaResultante= new StringBuilder(cadenaResultante);
    
    for (int i=0; i<cadena.Length; i++){
        if(cadena[i]==(cadena[i]+1)){
            cadenaResultante=cadena.Remove(cadena[i+1], cadena[i]);
            
        }else{
            cadenaResultante= cadena[i].ToString();
        }
            }
            return cadenaResultante.ToString();
            
       

        }
            
    }

*/
// Crea una clase Humano con los campos, como mínimo: nombre, edad, peso, sexo, inteligencia, fuerza, destreza y energía.
// Los métodos MostrarInformación, SetNombre, SetEdad,...y los constructores que creas necesarios.

// class Humano{
//     private string nombre;
//     private int edad;
//     private int peso;
//     private string sexo;
//     private string IQ;
//     private string fuerza;
//     private string destreza;
//     private string energia;

//         public Humano(string Nombre, int Edad, int Peso, string Sexo, string Iq, string Fuerza, string Destreza, string Energia){
//             this.nombre= Nombre;
//             this.edad= Edad;
//             this.peso= Peso;
//             this.sexo= Sexo;
//             this.IQ= Iq;
//             this.fuerza= Fuerza;
//             this.destreza= Destreza;
//             this.energia= Energia;
//         }
//         public string Getnombre(){
//             return nombre;
//         }

//         public int Getedad(){
//             return edad;
//         }

//         public string Getsexo(){
//             return sexo;
//         }

//         public string GetIQ() {
//             return IQ;
//         }

//         public string Getfuerza(){
//             return fuerza;
//         }

//         public string Getdestreza(){
//             return destreza;
//         }

//         public string Getenergia(){
//             return energia;
//         }

//         public void Setedad(int nuevaEdad){
//             edad= nuevaEdad;
//         }

//         public void Setfuerza(string nuevaFuerza){
//             fuerza= nuevaFuerza;
//         }

//         public void Setenergia( string nuevaEnergia){
//             energia= nuevaEnergia;
//         }

//         public void Setpeso(int nuevoPeso){
//             peso= nuevoPeso;
//         }
//          public void MostrarInformacion(){
//             Console.WriteLine("El nombre del humano: "+nombre);
//             Console.WriteLine("La edad del humano es: "+edad);
//             Console.WriteLine("El peso del humano es: "+peso);
//             Console.WriteLine("El sexo del humano es: "+sexo);
//             Console.WriteLine("El IQ del humano es: "+IQ);
//             Console.WriteLine("La fuerza del humano es: "+fuerza);
//             Console.WriteLine("La destreza del humano es: "+destreza);Console.WriteLine("La energia del humano es: "+energia);
//         }
// }

// class program{
//     static void Main(){
//         Humano persona= new Humano("Néstor", 18, 85, "Hombre", "150 IQ", "88 N", "mucha", "444 Kcal");

//         Console.WriteLine("Información original:");
//         persona.MostrarInformacion();

//         persona.Setedad(19);
//         persona.Setfuerza("100 N");
//         persona.Setenergia("600 Kcal");
//         persona.Setpeso(88);

//         Console.WriteLine();
//         Console.WriteLine("Información después de modificaciones: ");
//         persona.MostrarInformacion();
//     }


//  }

// public enum Palo{
//     Oros,
//     Copas,
//     Bastos,
//     Espada

// }
// class Naipes{
//     private int valor;
//     private Palo palo;

//         public Naipes(int valor, Palo palo){
//             this.valor= valor;
//             this.palo= palo;
//         }

//         public Palo GetPalo(){
//             return palo;
//         }

//         public int GetValor(){
//             return valor;
//         }

//         public Naipes [,] DevolverBaraja(){
//             Naipes[,] baraja= new Naipes[4,12];
//             for (int i= 0; i<4; i++) {
//                 for(int j=1; j<=12; j++ ){
//                     baraja[i,j]= new Naipes(j, (Palo)i);
//                 }
//             }
//             return baraja;
//         }

//         public void MezclarBaraja(Naipes[,] baraja){
//             Random random = new Random();
//             for(int i= 0; i<4; i++){
//                 for(int j= 0; j<12; j++){
//                     Palo randomPalo = (Palo)random.Next(0, 4);
//                     int randomValor = random.Next(1, 13); 
//                     Naipes cartaActual= baraja[i,j];
//                     baraja[i,j] = baraja[randomPalo, randomValor];
//                     baraja[randomPalo, randomValor]= cartaActual;
//                 }
//             }

//         }

//         public void MostrarBaraja(Naipes[,] baraja){
//             for( int i= 0; i<4; i++){
//                 for (int j=0; j<12; j++){
//                     Console.WriteLine($"Naipe: {baraja[i, j].GetValor()} de {baraja[i, j].GetPalo()}");
//                 }
//             }
//         }

//         class program{
//             static void Main(){
//             Naipes naipe= new Naipes(0, Palo.Oros);
//             Naipes[,] baraja = naipe.DevolverBaraja();
//             naipe.MezclarBaraja(baraja);
//             naipe.MostrarBaraja(baraja);
//             }
//         }




// }

/*Crea las clases silla, mesa y sofá hijas de la clase mueble del ejercicio 4 de la entrega anterior. A cada una de ellas le deberás de añadir los campos y métodos necesarios que identifiquen a dichos elementos según el texto del ejercicio 4.
Crea un método común para todos los muebles que nos permita calcular el precio del transporte según su peso, dimensiones y fabricante (puedes usar la fórmula que consideres para hacer este cálculo).
Finalmente, haz un programa principal que nos cree instancias de los tres tipos de
muebles, que llame a los métodos de las clases para mostrar la información y que llame al método para calcular el precio del transporte y lo muestre.*/

 
// public enum Muebles{
//     Sofás,
//     Sillas,
//     Mesas
// }

//  public struct Dimensiones
//         {
//             public int Ancho;
//             public int Alto;
//             public int Profundidad;
//         }

// public enum Color{
//     Marrón, 
//     Negro,
//     Celeste,
//     Blanco,
//     Marron,
//     Gris,
//     Beige,
//     Rojo

// }

// class Mueble{
//     private int peso;
//     private string fabricante;
//     private float precio;
//     private Dimensiones dimensiones;
//     private Color color;
  



//     public Mueble( Color color, int peso, Dimensiones dimensiones, string fabricante, float precio){
//         this.color= color;
//         this.dimensiones= dimensiones;
//         this.fabricante= fabricante;
//         this.precio= precio;
//         this.peso= peso;
//     }
     

//     public Color Getcolor(){
//         return color;
//     }

//     public double Getpeso(){
//         return peso;
//     }

//     public Dimensiones Getdimensiones(){
//         return dimensiones;
//     }

//     public string Getfabricante(){
//         return fabricante;
//     }

//     public double Getprecio(){
//         return precio;
//     }

    
//     public void SetPeso(int pesoActualizado){
//         peso= pesoActualizado;
//     }

//     public void SetPrecio(int precioActualizado){
//         precio= precioActualizado;
//     }

  

//     public void SetColor(Color Otrocolor){
//         color = Otrocolor;
//     }

//        public string ACadena()
//     {
//         string mensaje= "Fabricante: "+this.fabricante+
//             "\nPeso: " + this.peso+
//             "\nPrecio: " + this.precio+
//             "\nAlto: " + this.dimensiones.Alto+
//             "\nAncho: " + this.dimensiones.Ancho+
//             "\nProfundidad: " + this.dimensiones.Profundidad+
//             "\nColor: " + this.color;
//             return mensaje;
//     }


// }          

/**/


/* ----------------------------------------------------------------------------
Nota: para hacer este ejercicio debes usar los mecanismos de herencia y polimorfismo
1. Crea una clase para guardar información de deportistas profesionales:
 - Un deportista profesional es un deportista
 - Todo deportistas profesional debe tener un contrato
 - Guardaremos la información del contrato: empresa, fecha de alta, etc en una cadena de texto asociada a cada deportista profesional
 - Invalida el método ToString para imprimir toda la información del deportista profesional: nombre completo,
 - fecha de nacimiento, información del contrato y el texto: "deportista profesional"

2. Crea una clase para guardar información de deportistas de alto nivel:
 - Un de alto nivel profesional es un deportista
 - Todo deportistas profesional tienen un número de deportista de alto nivel que se compone de 10 dígitos que pueden empezar por ceros
 - Invalida el método ToString para imprimir toda la información del deportista de alto nivel: nombre completo,
 - fecha de nacimiento, número de deportista de alto nivel y el texto: "deportista de alto nivel"

3. Crea un array con 20 deportistas que serán deportistas profesionales y de alto nivel de manera aleatoria
 - Si creas un deportista profesional, la información de su contrato puede ser la misma para todos los deportistas profesionales
 - Si creas un deportista de alto nivel, del número de deportista de alto nivel puede ser el mismo para todos
 - Imprime en pantalla la información de los veinte deportistas
---------------------------------------------------------------------------- */

// public abstract class TablaEnteros
// {
//     private protected int[] tabla;
    
//     protected TablaEnteros (int tamaño){
//         tabla= new int[tamaño];
//     }

//     public int SumaPropia(){
//         Random random = new Random();

//         int tamaño= random.Next(1,51);

//         int[]tabla = new int[tamaño];

//         for(int i= 1; i<tabla.Length; i++){
//             tabla [i] = random.Next(-101, 101);
//             if(tabla[i] == 0){
//                 throw new ArgumentException("El valor no puede ser 0");
//             }
//         }
//             int contadorPositivos= 0;
//             int contadorNegativos= 0;
//             int sumaPositivos= 0;
//             int sumaNegativos= 0;

//             foreach(var n in tabla){
//                 if(n>0){
//                     contadorPositivos++;
//                     sumaPositivos += n;
//                 }else {
//                     contadorNegativos++;
//                     sumaNegativos += n;
//                 }

//             }
//              if (contadorPositivos>contadorNegativos){
//                     return sumaPositivos;
//                 }else{
//                    return sumaNegativos;
//                 }
//     }

//     public string DevuelveTabla(){
//          Random random = new Random();

//         int tamaño= random.Next(1,51);

//         int[]tabla = new int[tamaño];

//         for(int i= 1; i<tabla.Length; i++){
//             tabla [i] = random.Next(-101, 101);
//             if(tabla[i] == 0){
//                 throw new ArgumentException("El valor no puede ser 0");
//             }
//         }

//         Console.WriteLine("Tabla enteros: ");
//         foreach(var n in tabla){
//             Console.WriteLine(n);
//         }

//         return tabla.ToString();
//     }

//     public abstract void GuardarNumerosEnTabla();

// }

// public class TablaImpares: TablaEnteros{
//     public TablaImpares(int tamaño): base(tamaño){
        
//     }

//     public override void GuardarNumerosEnTabla()
//     {
//         Random random= new Random();

//         for(int i= 0; i<tabla.Length; i++){
//             int valor= random.Next(-101, 101);
//             if(valor % 2 != 0){
//                 tabla[i]= valor;
//             }
//         }
        
//     }
// }

// public class TablaPares: TablaEnteros{
//     public TablaPares(int tamaño):base(tamaño){

//     }
//      public override void GuardarNumerosEnTabla()
//     {
//         Random random= new Random();

//         for(int i= 0; i<tabla.Length; i++){
//             int valor= random.Next(-101, 101);
//             if(valor % 2 == 0){
//                 tabla[i]= valor;
//             }
//         }
        
//     }

// }

// class program{
//     static void Main(){
        
//     }
// }

// Ejercicio 1. Clases (5 puntos)
/* ----------------------------------------------------------------------------
1. Crea una clase llamada deportista:
 - Los deportistas tienen un id de deportista, un nombre completo y una fecha de nacimiento
 - El id es clave primaria autoincremental
 - El nombre es obligatorio
 - La fecha de nacimiento es opcional
 - No es necesario controlar errores
 - Crea los constructores necesarios
 - Crea el constructor de copia. La copia tendrá un id de deportista nuevo ya que es clave primaria
 - Crea los getters y setters
 - Invalida el método ToString() para que nos devuelva una cadena con toda la información del deportista

2. Crea una clase llamada equipo:
 - Un equipo tiene un código de equipo, un nombre y desde cero hasta 20 deportistas
 - El código del equipo debe tener tres letras en mayúsculas
 - El nombre es obligatorio
 - Genera errores adecuados si el código no tiene tres letras.
 - Las letras del código pueden estar en minúsculas, pero se deben pasar a mayúsculas
 - Todo equipo tendrá un mínimo de cero y un máximo de veinte deportistas
 - Crea un constructor con el código y el nombre como parámetros
 - Crea el constructor de copia
 - Crea los getters y setters
 - Invalida el métido ToString() que nos devuelve en una cadena toda la información del
   equipo más toda la información de sus deportistas
 - Crea un método que añada un deportista a un equipo
 - Genera errores adecuados si el se intenta añadir un deportista a un equipo que ya tiene 20 deportistas.

3. Para probarlo todo:
 - Crea dos equipos.
 - Añade a uno 10 deportistas de manera aleatoria y al segundo 15 deportistas de manera aleatoria
 - Saca por pantalla toda la información de los dos equipos

class Deportista{
    private int ID;
    private string nombreCompleto;
    private DateTime? fechaNacimiento;
        public Deportista(){
            ID=0;
        }
        public Deportista(int ID, string nombreCompleto, DateTime? fechaNacimiento){
            this.ID= ID;
            this.nombreCompleto= nombreCompleto;
            this.fechaNacimiento= fechaNacimiento;
        }
        public Deportista(Deportista deportista){
            ID= deportista.ID+1;
            nombreCompleto= deportista.nombreCompleto;
            fechaNacimiento= deportista.fechaNacimiento;
        }

        public int GetID(){
            return ID;
        }
        public string GetNombre(){
            return nombreCompleto;
        }
        public DateTime? GetFechaNacimiento(){
            return fechaNacimiento;
        }
        public void SetID(int ID){
            this.ID=ID;
        }

        public override string ToString(){
            return $"El deportista {nombreCompleto} nació en {fechaNacimiento} y su id es {ID}";
        }
}

class Equipo{
    private string codigoEquipo;
    private string nombre;
    private Deportista[] deportista;

        
        public Equipo(string codigoEquipo, string nombre){
            this.codigoEquipo= codigoEquipo;
            this.nombre= nombre;
            deportista= new Deportista[19];

        }

        public Equipo(Equipo equipo){
           this.codigoEquipo= equipo.codigoEquipo;
           this.nombre= equipo.nombre;
           this.deportista= equipo.deportista;
        }

        public string GetNombre(){
            return nombre;
        }

        public void SetNombre(string nombre){
            if (nombre==null){
                throw new ArgumentNullException("El nombre del equipo no puede ser nulo");
            }

            if(nombre==string.Empty){
                throw new ArgumentException("El nombre no puede ser nulo");
            }

            this.nombre=nombre;
        }

        public string GetCodigoEquipo(){
            return codigoEquipo;
        }

        public void SetCodigoEquipo(string codigoEquipo){
            if(codigoEquipo.Length <3 || codigoEquipo.Length >3 ){
                throw new ArgumentOutOfRangeException("El código debe de ser de 3 letras");
            }
            this.codigoEquipo= codigoEquipo.ToUpper();
        }

        public void AgregarDeportistas(Deportista[] deportistasNuevos){
            if(deportista.Length>=20){
                throw new ArgumentOutOfRangeException("No pueden haber más de 20 deportistas en un equipo");
            }
            for(int i=0; i<deportistasNuevos.Length; i++){
                deportista[i]= deportistasNuevos[i];
            }
        }

        public override string ToString()
        {
        string datos = "";
        foreach (var deportistaEquipo in deportista)
        {   
        if (deportistaEquipo != null)
        {
            datos += deportistaEquipo.ToString() + "\n";
        }
        }
    return $"El equipo {nombre} con ID {codigoEquipo} tiene los siguientes deportistas:\n {datos}";
}
}

class ejercicio1{
    static void Main(){
        Equipo equipo = new Equipo("AAA", "Equipo A");
        Equipo equipo2 = new Equipo("ABA", "Equipo B");

        Random random = new Random();

        Deportista[] deportistas1 = new Deportista[10];
        for (int i= 0; i<10; i++){
            Deportista deportista= new Deportista(i+1,  $"Deportista {i + 1}", new DateTime(1990 + i, 1, 1));
            equipo.AgregarDeportistas(deportistas1);
        }

        Deportista[] deportistas2 = new Deportista[15];
        for (int i=0; i<15; i++){
            Deportista deportista = new Deportista(i + 1, $"Deportista {i + 1}", new DateTime(1995 + i, 1, 1));
            equipo2.AgregarDeportistas(deportistas2);
        }

         Console.WriteLine("Información del Equipo 1:");
        Console.WriteLine(equipo.ToString());

        Console.WriteLine("\nInformación del Equipo 2:");
        Console.WriteLine(equipo2.ToString());
    }
}
---------------------------------------------------------------------------- */
// ----------------------------------------------------------------------------
// Ejercicio 2. Herencia y polimorfismo (4 puntos)
/*----------------------------------------------------------------------------
Nota: para hacer este ejercicio debes usar los mecanismos de herencia y polimorfismo
1. Crea una clase para guardar información de deportistas profesionales:
 - Un deportista profesional es un deportista
 - Todo deportistas profesional debe tener un contrato
 - Guardaremos la información del contrato: empresa, fecha de alta, etc en una cadena de texto asociada a cada deportista profesional
 - Invalida el método ToString para imprimir toda la información del deportista profesional: nombre completo,
 - fecha de nacimiento, información del contrato y el texto: "deportista profesional"

2. Crea una clase para guardar información de deportistas de alto nivel:
 - Un de alto nivel profesional es un deportista
 - Todo deportistas profesional tienen un número de deportista de alto nivel que se compone de 10 dígitos que pueden empezar por ceros
 - Invalida el método ToString para imprimir toda la información del deportista de alto nivel: nombre completo,
 - fecha de nacimiento, número de deportista de alto nivel y el texto: "deportista de alto nivel"

3. Crea un array con 20 deportistas que serán deportistas profesionales y de alto nivel de manera aleatoria
 - Si creas un deportista profesional, la información de su contrato puede ser la misma para todos los deportistas profesionales
 - Si creas un deportista de alto nivel, del número de deportista de alto nivel puede ser el mismo para todos
 - Imprime en pantalla la información de los veinte deportistas
 
class Contrato{
    private string empresa;
    private DateTime fechaAlta;
    private DateTime fechaVencimiento; 
    private int salario;

        public Contrato(string empresa, DateTime fechaAlta, DateTime fechaVencimiento, int salario){
            this.empresa= empresa;
            this.fechaAlta= fechaAlta;
            this.fechaVencimiento= fechaVencimiento;
            this.salario = salario;

        }

        public string GetEmpresa(){
            return empresa;
        }

        public DateTime GetFechaAlta(){
            return fechaAlta;
        }

        public DateTime GetFechaVencimiento(){
            return fechaVencimiento;
        }

        public int GetSalario(){
            return salario;
        }

        public void SetSalario(int salario){
            this.salario= salario;
        }

        public override string ToString(){
            return $"Los datos del contrato son los siguientes:\n Nombre de la empresa: {empresa}\n Fecha de alta:\n {fechaAlta}\n Fecha de vencimiento del contrato: {fechaVencimiento}\n Salario: {salario}";
        }
}

class DeportistaProfesional{
    private Contrato contrato;
    private string nombreCompleto;
    private DateTime fechaNacimiento;

        public DeportistaProfesional(string nombre, DateTime fachaNacimiento, Contrato contrato){
            nombreCompleto= nombre;
            this.fechaNacimiento= fachaNacimiento;
            this.contrato= contrato;
        }

        public string GetNombre(){
            return nombreCompleto;
        }

        public DateTime GetFechaNacimiento(){
            return fechaNacimiento;
        }

        public Contrato GetContrato(){
            return contrato;
        }

        public override string ToString(){
            string cadena= contrato.ToString();
            return $"{nombreCompleto} nació el {fechaNacimiento} y la infor macion de su contrato es: " + $"{cadena}";
        }
}

class DeportistaAltoNivel : DeportistaProfesional{
    private long idAltoNivel;

        public DeportistaAltoNivel(string nombre, DateTime fachaNacimiento, Contrato contrato, long idAltoNivel): base (nombre, fachaNacimiento, contrato ){
            this.idAltoNivel= idAltoNivel;
        }

        public long GetID(){
            return idAltoNivel;
        }

        public void SetID(int idAltoNivel){
            string ID = idAltoNivel.ToString();
            if(ID.Length != 10){
                throw new ArgumentException("El ID del deportista profesional tiene que ser obligatoriamente de 10 digitos");
            }
            this.idAltoNivel= idAltoNivel;
        }

        public override string ToString(){
            string cadena= base.ToString();
            return $"Deportista alto nivel:\n ID: {idAltoNivel}\n Datos del deportista {cadena}";
        }

}
class ejercicio2{
    static void Main(){
        Random random = new Random();
// Crear un contrato para deportistas profesionales
    Contrato contratoProfesional = new Contrato("Empresa de Deportes", new DateTime(2022, 1, 1), new DateTime(2024, 12, 31), 50000);

    // Crear un array de 20 deportistas
    DeportistaProfesional[] deportistas = new DeportistaProfesional[20];

    // Generar 10 deportistas profesionales
    for (int i = 0; i < 10; i++)
    {
        string nombreProfesional = "DeportistaProfesional " + i;
        DateTime fechaNacimientoProfesional = new DateTime(random.Next(1980, 2003), random.Next(1, 13), random.Next(1, 28));
        deportistas[i] = new DeportistaProfesional(nombreProfesional, fechaNacimientoProfesional, contratoProfesional);
    }

    // Generar 10 deportistas de alto nivel
    for (int i = 10; i < 20; i++)
    {
        string nombreAltoNivel = "DeportistaAltoNivel " + i;
        DateTime fechaNacimientoAltoNivel = new DateTime(random.Next(1980, 2003), random.Next(1, 13), random.Next(1, 28));
        long idAltoNivel = random.Next(0000000000, 999999999);
        deportistas[i] = new DeportistaAltoNivel(nombreAltoNivel, fechaNacimientoAltoNivel, contratoProfesional, idAltoNivel);
    }

    // Imprimir la información de los 20 deportistas
    foreach (DeportistaProfesional deportista in deportistas)
    {
        Console.WriteLine($"{deportista}\n");
    }
}
*/

//

 


class cliente{
    private readonly int  numeroCliente;
    private string nombre;
    private string apellidos;
    private string  dni;
    private DateOnly?  fechaNacimiento;
    private double saldo;

    public cliente(){
        numeroCliente= 0;
    }

    public cliente(string nombre, string apellidos, string dni){
        
        this.nombre= nombre;
        this.apellidos= apellidos;
        this.dni= dni;
        
    
    }
    public cliente(string nombre, string apellidos, string dni, DateOnly fechaNacimiento){
        
        this.nombre= nombre;
        this.apellidos= apellidos;
        this.dni= dni;
        this.fechaNacimiento= fechaNacimiento;
    
    }

    public string Getnombre(){
        return nombre;
    }
    public string GetApellidos(){
        return apellidos;
    }

    public string GetDni(){
        return dni;
    }

    public DateOnly? GetFechaNacimiento(){
        return fechaNacimiento;
    }

    public int GetNumeroCliente(){
        return numeroCliente;
    }
    public double GetSaldo(){
        return saldo;
    }

    public string ToString(){
        return $"Cliente {numeroCliente}: {nombre} {apellidos}, DNI: {dni}, Fecha de Nacimiento {fechaNacimiento}\n Saldo: {saldo} tokens";
    } 
}

class Tienda{

    private string nombreTienda;
    private cliente cliente;

    public Tienda(cliente cliente, string nombreTienda){
        this.cliente= cliente;
        this.nombreTienda= nombreTienda;
        // if(cliente.Length>100){
        //     throw new ArgumentOutOfRangeException("Como máximo pueden haber 100 clientes");
        // }
    }

    public string GetNombreTienda(){
        return nombreTienda;
    }

    public string ToString(){
        return $"{nombreTienda}\n" + $"{cliente.ToString()}";
    }

}

    class program{
        static void Main(){
            Tienda tienda1= new Tienda(new cliente(),"Tienda Clics y teclados" );
            
            cliente [] cliente = new cliente[50];

            for(int i= 0; i<=50; i++){
                string nombre= GeneradorDeNombresAleatorios.GeneraNombre();
                string apellidos= GeneradorDeNombresAleatorios.GeneraDosApellidos();
                string dni= GeneradorDNIsAleatorios.GeneraDNI();
                DateOnly fecha= GeneradorDeFechasDeNacimentoAleatorias.GeneraFechaDeNacimiento();

                cliente[i]= new cliente(nombre, apellidos, dni, fecha);

            if(cliente.Length>100){
            throw new ArgumentOutOfRangeException("Como máximo pueden haber 100 clientes");
        }
            }

            Console.WriteLine($"{cliente}\n");
        }
    }

    public static class GeneradorDeNombresAleatorios
{
    private static Random aleatorio = new Random();
    private static string[] nombres = new string[] { "Antonio", "María del Carmen", "Manuel", "María", "José", "Carmen", "Francisco", "Ana María", "David", "María Pilar", "Juan", "Laura", "Javier", "Joséfa", "José Antonio", "Isabel", "Daniel", "María Dolores", "Francisco Javier", "María Teresa" };
    private static string[] apellidos = new string[] { "García", "González", "Fernández", "Rodríguez", "López", "Martínez", "Sánchez", "Pérez", "Gómez", "Martín", "Jiménez", "Ruiz", "Hernández", "Díaz", "Moreno", "Álvarez", "Muñoz", "Romero", "Alonso", "Gutiérrez", "Navarro", "Torres", "Domínguez", "Vázquez", "Ramos" }; 

    public static string GeneraNombre() => nombres[aleatorio.Next(nombres.Length)];

    public static string GeneraApellido() => apellidos[aleatorio.Next(apellidos.Length)];

    public static string GeneraDosApellidos() => GeneraApellido() + " " + GeneraApellido();

    public static string GeneraNombreCompleto() => GeneraNombre() + " " + GeneraDosApellidos();

    public static string GeneraApellidosComaNombre() => GeneraDosApellidos() + ", " + GeneraNombre();
}

public static class GeneradorDeFechasDeNacimentoAleatorias
{
    private static Random aleatorio;
    
    const int AñosMinimos = 18;
    const int AñosMaximos = 65;
    const int DiasAño = 365;

    static GeneradorDeFechasDeNacimentoAleatorias() => aleatorio = new Random();

    // Tal y como está calculada la fecha, la edad podría ser unos días menor de 18 años debido a los años bisiestos
    public static DateOnly GeneraFechaDeNacimiento() => DateOnly.FromDateTime(DateTime.Now.AddDays(-aleatorio.Next(AñosMaximos * DiasAño - AñosMinimos * DiasAño) - AñosMinimos * DiasAño));
}

public static class GeneradorDNIsAleatorios
{
    private static Random aleatorio= new Random();
    private static string letras = "TRWAGMYFPDXBNJZSQVHLCKE";

    public static string GeneraDNI()
    {
        int numeroDNI = aleatorio.Next(10000000, 100000000); // Genera un número entre 10000000 y 99999999
        char letraDNI = letras[numeroDNI % 23];
        return $"{numeroDNI}{letraDNI}";
    }
}





























// ----------------------------------------------------------------------------
// Ejercicio 1. Clases (5 puntos)
/* ----------------------------------------------------------------------------
1. Crea una clase llamada deportista:
 - Los deportistas tienen un id de deportista, un nombre completo y una fecha de nacimiento
 - El id es clave primaria autoincremental
 - El nombre es obligatorio
 - La fecha de nacimiento es opcional
 - No es necesario controlar errores
 - Crea los constructores necesarios
 - Crea el constructor de copia. La copia tendrá un id de deportista nuevo ya que es clave primaria
 - Crea los getters y setters
 - Invalida el método ToString() para que nos devuelva una cadena con toda la información del deportista

2. Crea una clase llamada equipo:
 - Un equipo tiene un código de equipo, un nombre y desde cero hasta 20 deportistas
 - El código del equipo debe tener tres letras en mayúsculas
 - El nombre es obligatorio
 - Genera errores adecuados si el código no tiene tres letras.
 - Las letras del código pueden estar en minúsculas, pero se deben pasar a mayúsculas
 - Todo equipo tendrá un mínimo de cero y un máximo de veinte deportistas
 - Crea un constructor con el código y el nombre como parámetros
 - Crea el constructor de copia
 - Crea los getters y setters
 - Invalida el métido ToString() que nos devuelve en una cadena toda la información del
   equipo más toda la información de sus deportistas
 - Crea un método que añada un deportista a un equipo
 - Genera errores adecuados si el se intenta añadir un deportista a un equipo que ya tiene 20 deportistas.

3. Para probarlo todo:
 - Crea dos equipos.
 - Añade a uno 10 deportistas de manera aleatoria y al segundo 15 deportistas de manera aleatoria
 - Saca por pantalla toda la información de los dos equipos

class Deportista{
    private int ID;
    private string nombreCompleto;
    private DateTime? fechaNacimiento;
        public Deportista(){
            ID=0;
        }
        public Deportista(int ID, string nombreCompleto, DateTime? fechaNacimiento){
            this.ID= ID;
            this.nombreCompleto= nombreCompleto;
            this.fechaNacimiento= fechaNacimiento;
        }
        public Deportista(Deportista deportista){
            ID= deportista.ID+1;
            nombreCompleto= deportista.nombreCompleto;
            fechaNacimiento= deportista.fechaNacimiento;
        }

        public int GetID(){
            return ID;
        }
        public string GetNombre(){
            return nombreCompleto;
        }
        public DateTime? GetFechaNacimiento(){
            return fechaNacimiento;
        }
        public void SetID(int ID){
            this.ID=ID;
        }

        public override string ToString(){
            return $"El deportista {nombreCompleto} nació en {fechaNacimiento} y su id es {ID}";
        }
}

class Equipo{
    private string codigoEquipo;
    private string nombre;
    private Deportista[] deportista;

        
        public Equipo(string codigoEquipo, string nombre){
            this.codigoEquipo= codigoEquipo;
            this.nombre= nombre;
            deportista= new Deportista[19];

        }

        public Equipo(Equipo equipo){
           this.codigoEquipo= equipo.codigoEquipo;
           this.nombre= equipo.nombre;
           this.deportista= equipo.deportista;
        }

        public string GetNombre(){
            return nombre;
        }

        public void SetNombre(string nombre){
            if (nombre==null){
                throw new ArgumentNullException("El nombre del equipo no puede ser nulo");
            }

            if(nombre==string.Empty){
                throw new ArgumentException("El nombre no puede ser nulo");
            }

            this.nombre=nombre;
        }

        public string GetCodigoEquipo(){
            return codigoEquipo;
        }

        public void SetCodigoEquipo(string codigoEquipo){
            if(codigoEquipo.Length <3 || codigoEquipo.Length >3 ){
                throw new ArgumentOutOfRangeException("El código debe de ser de 3 letras");
            }
            this.codigoEquipo= codigoEquipo.ToUpper();
        }

        public void AgregarDeportistas(Deportista[] deportistasNuevos){
            if(deportista.Length>=20){
                throw new ArgumentOutOfRangeException("No pueden haber más de 20 deportistas en un equipo");
            }
            for(int i=0; i<deportistasNuevos.Length; i++){
                deportista[i]= deportistasNuevos[i];
            }
        }

        public override string ToString()
        {
        string datos = "";
        foreach (var deportistaEquipo in deportista)
        {   
        if (deportistaEquipo != null)
        {
            datos += deportistaEquipo.ToString() + "\n";
        }
        }
    return $"El equipo {nombre} con ID {codigoEquipo} tiene los siguientes deportistas:\n {datos}";
}
}

class ejercicio1{
    static void Main(){
        Equipo equipo = new Equipo("AAA", "Equipo A");
        Equipo equipo2 = new Equipo("ABA", "Equipo B");

        Random random = new Random();

        Deportista[] deportistas1 = new Deportista[10];
        for (int i= 0; i<10; i++){
            Deportista deportista= new Deportista(i+1,  $"Deportista {i + 1}", new DateTime(1990 + i, 1, 1));
            equipo.AgregarDeportistas(deportistas1);
        }

        Deportista[] deportistas2 = new Deportista[15];
        for (int i=0; i<15; i++){
            Deportista deportista = new Deportista(i + 1, $"Deportista {i + 1}", new DateTime(1995 + i, 1, 1));
            equipo2.AgregarDeportistas(deportistas2);
        }

         Console.WriteLine("Información del Equipo 1:");
        Console.WriteLine(equipo.ToString());

        Console.WriteLine("\nInformación del Equipo 2:");
        Console.WriteLine(equipo2.ToString());
    }
}





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































*/






























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































                                     





    


    

    





              
                
            
                
        

        
    























